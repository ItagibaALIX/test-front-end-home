{"ast":null,"code":"var _jsxFileName = \"/Users/itagibaalix/Dev/tests/fronttestcryptio/src/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport { useState } from 'react';\nimport { Button, Divider } from '@mui/material';\nimport TableBTC from './components/Tables/TableBTC';\nimport TableDessert from './components/Tables/TableDessert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getPriceBTC = async () => {\n  const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');\n  return res.json();\n};\nconst PRICE_BTC = \"priceBTC\";\nconst Dashboard = () => {\n  _s();\n  const query = useQuery(PRICE_BTC, getPriceBTC);\n  const [btcPrice, setBtcPrice] = useState(query.data ? [query.data.bpi.USD, query.data.bpi.GBP, query.data.bpi.EUR] : null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl text-gray-500 font-bold pt-4\",\n      children: \"Dessert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableDessert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-4\",\n      children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl text-gray-500 font-bold\",\n        children: \"BTC Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: async () => {\n          await query.refetch();\n          setBtcPrice([query.data.bpi.USD, query.data.bpi.GBP, query.data.bpi.EUR]);\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBTC, {\n      btcPrice: btcPrice,\n      setBtcPrice: setBtcPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"cTmmxuNym+c4oRhD8o47QKCOWp8=\", false, function () {\n  return [useQuery];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useQuery","useState","Button","Divider","TableBTC","TableDessert","jsxDEV","_jsxDEV","Fragment","_Fragment","getPriceBTC","res","fetch","json","PRICE_BTC","Dashboard","_s","query","btcPrice","setBtcPrice","data","bpi","USD","GBP","EUR","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","refetch","_c","$RefreshReg$"],"sources":["/Users/itagibaalix/Dev/tests/fronttestcryptio/src/Dashboard.tsx"],"sourcesContent":["import { useQuery } from 'react-query';\nimport { useState } from 'react';\nimport { Button, Divider } from '@mui/material';\nimport TableBTC from './components/Tables/TableBTC';\nimport TableDessert from './components/Tables/TableDessert';\n\nexport type DessertDetail = {\n  name: string,\n  calories: number,\n  fat: number,\n  carbs: number,\n  protein: number\n}\n\nexport type PriceType = {\n  code: string,\n  symbol: string,\n  rate: string,\n  description: string,\n  rate_float: string\n}\n\nconst getPriceBTC = async () => {\n  const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');\n  return res.json();\n};\n\nconst PRICE_BTC = \"priceBTC\"\n\nconst Dashboard = () => {\n  const query = useQuery(PRICE_BTC, getPriceBTC)\n\n  const [btcPrice, setBtcPrice] = useState<PriceType[] | null>(query.data ? [query.data.bpi.USD, query.data.bpi.GBP, query.data.bpi.EUR] : null)\n\n  return (\n    <>\n      <h2 className=\"text-xl text-gray-500 font-bold pt-4\">\n        Dessert \n      </h2>\n      <TableDessert />  \n      <div className='py-4'>\n        <Divider />\n      </div>\n      <div className='flex flex-row justify-between items-center'>\n        <h2 className=\"text-xl text-gray-500 font-bold\">\n          BTC Price \n        </h2>\n        <Button\n          variant='contained'\n          onClick={async () => {\n          await query.refetch()\n          setBtcPrice([query.data.bpi.USD, query.data.bpi.GBP, query.data.bpi.EUR])\n        }}>\n          Update \n        </Button>\n      </div>\n      <TableBTC btcPrice={btcPrice} setBtcPrice={setBtcPrice} />\n    </>\n  );\n}\n\nexport default Dashboard"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}